import{g as s}from"./_commonjsHelpers.725317a4.js";function _(e,r){for(var i=0;i<r.length;i++){const t=r[i];if(typeof t!="string"&&!Array.isArray(t)){for(const n in t)if(n!=="default"&&!(n in e)){const E=Object.getOwnPropertyDescriptor(t,n);E&&Object.defineProperty(e,n,E.get?E:{enumerable:!0,get:()=>t[n]})}}}return Object.freeze(Object.defineProperty(e,Symbol.toStringTag,{value:"Module"}))}const N=4294967295,a=1<<31,f=9,o=65535,d=1<<22,b=o,u=1<<f,c=o<<f;function m(e){return e&a?{}:e&d?{seconds:(e&o)<<f}:{blocks:e&o}}function C({blocks:e,seconds:r}){if(e!==void 0&&r!==void 0)throw new TypeError("Cannot encode blocks AND seconds");if(e===void 0&&r===void 0)return N;if(r!==void 0){if(!Number.isFinite(r))throw new TypeError("Expected Number seconds");if(r>c)throw new TypeError("Expected Number seconds <= "+c);if(r%u!==0)throw new TypeError("Expected Number seconds as a multiple of "+u);return d|r>>f}if(!Number.isFinite(e))throw new TypeError("Expected Number blocks");if(e>o)throw new TypeError("Expected Number blocks <= "+b);return e}var p={decode:m,encode:C};const S=s(p),y=_({__proto__:null,default:S},[p]);export{y as i};
//# sourceMappingURL=index.59b9c9a3.js.map
