{"version":3,"file":"2.07f11e21.js","sources":["../../../../../../../../node_modules/@sveltejs/kit/src/runtime/app/navigation.js","../../../../../../src/routes/+page.ts","../../../../../../src/lib/images/lock.svg","../../../../../../src/lib/images/arrow_back.svg","../../../../../../src/lib/images/arrow_down.svg","../../../../../../src/lib/images/arrow_step.svg","../../../../../../src/lib/images/month.svg","../../../../../../src/lib/CopyToClipboard.svelte","../../../../../../src/routes/+page.svelte"],"sourcesContent":["import { client_method } from '../client/singletons.js';\n\n/**\n * If called when the page is being updated following a navigation (in `onMount` or `afterNavigate` or an action, for example), this disables SvelteKit's built-in scroll handling.\n * This is generally discouraged, since it breaks user expectations.\n * @returns {void}\n */\nexport const disableScrollHandling = /* @__PURE__ */ client_method('disable_scroll_handling');\n\n/**\n * Returns a Promise that resolves when SvelteKit navigates (or fails to navigate, in which case the promise rejects) to the specified `url`.\n * For external URLs, use `window.location = url` instead of calling `goto(url)`.\n *\n * @type {(url: string | URL, opts?: {\n *   replaceState?: boolean;\n *   noScroll?: boolean;\n *   keepFocus?: boolean;\n *   invalidateAll?: boolean;\n *   state?: any\n * }) => Promise<void>}\n * @param {string | URL} url Where to navigate to. Note that if you've set [`config.kit.paths.base`](https://kit.svelte.dev/docs/configuration#paths) and the URL is root-relative, you need to prepend the base path if you want to navigate within the app.\n * @param {Object} [opts] Options related to the navigation\n * @param {boolean} [opts.replaceState] If `true`, will replace the current `history` entry rather than creating a new one with `pushState`\n * @param {boolean} [opts.noScroll] If `true`, the browser will maintain its scroll position rather than scrolling to the top of the page after navigation\n * @param {boolean} [opts.keepFocus] If `true`, the currently focused element will retain focus after navigation. Otherwise, focus will be reset to the body\n * @param {boolean} [invalidateAll] If `true`, all `load` functions of the page will be rerun. See https://kit.svelte.dev/docs/load#rerunning-load-functions for more info on invalidation.\n * @param {any} [opts.state] The state of the new/updated history entry\n * @returns {Promise<void>}\n */\nexport const goto = /* @__PURE__ */ client_method('goto');\n\n/**\n * Causes any `load` functions belonging to the currently active page to re-run if they depend on the `url` in question, via `fetch` or `depends`. Returns a `Promise` that resolves when the page is subsequently updated.\n *\n * If the argument is given as a `string` or `URL`, it must resolve to the same URL that was passed to `fetch` or `depends` (including query parameters).\n * To create a custom identifier, use a string beginning with `[a-z]+:` (e.g. `custom:state`) — this is a valid URL.\n *\n * The `function` argument can be used define a custom predicate. It receives the full `URL` and causes `load` to rerun if `true` is returned.\n * This can be useful if you want to invalidate based on a pattern instead of a exact match.\n *\n * ```ts\n * // Example: Match '/path' regardless of the query parameters\n * import { invalidate } from '$app/navigation';\n *\n * invalidate((url) => url.pathname === '/path');\n * ```\n * @type {(url: string | URL | ((url: URL) => boolean)) => Promise<void>}\n * @param {string | URL | ((url: URL) => boolean)} url The invalidated URL\n * @returns {Promise<void>}\n */\nexport const invalidate = /* @__PURE__ */ client_method('invalidate');\n\n/**\n * Causes all `load` functions belonging to the currently active page to re-run. Returns a `Promise` that resolves when the page is subsequently updated.\n * @type {() => Promise<void>}\n * @returns {Promise<void>}\n */\nexport const invalidateAll = /* @__PURE__ */ client_method('invalidate_all');\n\n/**\n * Programmatically preloads the given page, which means\n *  1. ensuring that the code for the page is loaded, and\n *  2. calling the page's load function with the appropriate options.\n *\n * This is the same behaviour that SvelteKit triggers when the user taps or mouses over an `<a>` element with `data-sveltekit-preload-data`.\n * If the next navigation is to `href`, the values returned from load will be used, making navigation instantaneous.\n * Returns a Promise that resolves when the preload is complete.\n *\n * @type {(href: string) => Promise<void>}\n * @param {string} href Page to preload\n * @returns {Promise<void>}\n */\nexport const preloadData = /* @__PURE__ */ client_method('preload_data');\n\n/**\n * Programmatically imports the code for routes that haven't yet been fetched.\n * Typically, you might call this to speed up subsequent navigation.\n *\n * You can specify routes by any matching pathname such as `/about` (to match `src/routes/about/+page.svelte`) or `/blog/*` (to match `src/routes/blog/[slug]/+page.svelte`).\n *\n * Unlike `preloadData`, this won't call `load` functions.\n * Returns a Promise that resolves when the modules have been imported.\n *\n * @type {(...urls: string[]) => Promise<void>}\n * @param {...string[]} urls\n * @returns {Promise<void>}\n */\nexport const preloadCode = /* @__PURE__ */ client_method('preload_code');\n\n/**\n * A navigation interceptor that triggers before we navigate to a new URL, whether by clicking a link, calling `goto(...)`, or using the browser back/forward controls.\n * Calling `cancel()` will prevent the navigation from completing. If the navigation would have directly unloaded the current page, calling `cancel` will trigger the native\n * browser unload confirmation dialog. In these cases, `navigation.willUnload` is `true`.\n *\n * When a navigation isn't client side, `navigation.to.route.id` will be `null`.\n *\n * `beforeNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').BeforeNavigate) => void) => void}\n * @param {(navigation: import('@sveltejs/kit').BeforeNavigate) => void} callback\n * @returns {void}\n */\nexport const beforeNavigate = /* @__PURE__ */ client_method('before_navigate');\n\n/**\n * A lifecycle function that runs the supplied `callback` immediately before we navigate to a new URL.\n *\n * If you return a `Promise`, SvelteKit will wait for it to resolve before completing the navigation. This allows you to — for example — use `document.startViewTransition`. Avoid promises that are slow to resolve, since navigation will appear stalled to the user.\n *\n * If a function (or a `Promise` that resolves to a function) is returned from the callback, it will be called once the DOM has updated.\n *\n * `onNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').OnNavigate) => import('../../types/internal.js').MaybePromise<(() => void) | void>) => void}\n * @param {(navigation: import('@sveltejs/kit').OnNavigate) => void} callback\n * @returns {void}\n */\nexport const onNavigate = /* @__PURE__ */ client_method('on_navigate');\n\n/**\n * A lifecycle function that runs the supplied `callback` when the current component mounts, and also whenever we navigate to a new URL.\n *\n * `afterNavigate` must be called during a component initialization. It remains active as long as the component is mounted.\n * @type {(callback: (navigation: import('@sveltejs/kit').AfterNavigate) => void) => void}\n * @param {(navigation: import('@sveltejs/kit').AfterNavigate) => void} callback\n * @returns {void}\n */\nexport const afterNavigate = /* @__PURE__ */ client_method('after_navigate');\n","// since there's no dynamic data here, we can prerender\n// it so that it gets served as a static asset in production\nexport const ssr = false;\nexport const prerender = true;\n\nexport async function load({ url }) { \n\tlet q = url.searchParams.get('q') || undefined;\n  let p = url.searchParams.get('p') || undefined;\n\tlet cashaddr = url.searchParams.get('cashaddr') || undefined;\n\tlet lockingBytecode = url.searchParams.get('lockingBytecode') || undefined;\n\tlet base58 = url.searchParams.get('base58') || undefined;\n\treturn { q, p, cashaddr, lockingBytecode, base58 };\n}","export default \"__VITE_ASSET__d96f65dd__\"","export default \"__VITE_ASSET__c8ee0efc__\"","export default \"__VITE_ASSET__52eecc49__\"","export default \"__VITE_ASSET__02be7c76__\"","export default \"__VITE_ASSET__34863874__\"","<script lang=\"ts\">\n  import { createEventDispatcher } from \"svelte\";\n\n  export let text: string;\n\n  const dispatch = createEventDispatcher<{ copy: string; fail: never }>();\n\n  const copy = () => {\n    console.log(text)\n    navigator.clipboard.writeText(text).then(\n      () => dispatch(\"copy\", text),\n      (e) => dispatch(\"fail\")\n    );\n  };\n</script>\n\n<slot {copy} />","<script>\n\timport { page } from '$app/stores';\n\timport { goto } from '$app/navigation';\n\timport lock from '$lib/images/lock.svg';\n\timport arrow_back from '$lib/images/arrow_back.svg';\n\timport arrow_down from '$lib/images/arrow_down.svg';\n\timport arrow_step from '$lib/images/arrow_step.svg';\n\timport month from '$lib/images/month.svg';\n\timport { _ } from 'svelte-i18n';\n\timport { toast } from '@zerodevx/svelte-toast';\n\timport CopyToClipboard from '$lib/CopyToClipboard.svelte';\n\timport {\n\t\tbinToBase64,\n\t\tbase64ToBin,\n\t\tlockingBytecodeToCashAddress,\n\t\tcashAddressToLockingBytecode\n\t} from '@bitauth/libauth';\n\timport { Perpetuity, sanitizeAddress } from '@unspent/phi';\n\timport { deflate, inflate } from 'pako';\n\timport { receiptAddressStore } from '$lib/store.js';\n\n\texport let data;\n\texport let p;\n\tlet balance;\n\tlet receiptAddress;\n\tlet contract;\n\tlet receiptAddressValid = false;\n\n\tif (data.q) {\n\t\tif (!receiptAddress) {\n\t\t\tlet bytecode = inflate(base64ToBin(encodeURI(data.q)));\n\t\t\treceiptAddress = lockingBytecodeToCashAddress(bytecode);\n\t\t\treceiptAddressValid = true;\n\t\t\tcreateContract();\n\t\t}\n\t}\n\n\tif (data.p) {\n\t\tp = data.p;\n\t}\n\n\tasync function createContract() {\n\t\tif (receiptAddress) {\n\t\t\ttry {\n\t\t\t\ttry {\n\t\t\t\t\treceiptAddress = await sanitizeAddress(receiptAddress);\n\t\t\t\t\treceiptAddressValid = true;\n\t\t\t\t\treceiptAddressStore.set(receiptAddress);\n\t\t\t\t} catch (e) {\n\t\t\t\t\treceiptAddressValid = false;\n\t\t\t\t\tif (e.message) {\n\t\t\t\t\t\ttoast.push(e.message, { classes: ['warn'] });\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttoast.push(e, { classes: ['warn'] });\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\tcontract = new Perpetuity(4383, receiptAddress, 1500, 96);\n\t\t\t\tlet bytecode = cashAddressToLockingBytecode(receiptAddress).bytecode;\n\t\t\t\tlet q = decodeURI(binToBase64(deflate(bytecode)));\n\t\t\t\t$page.url.searchParams.set('q', q);\n\t\t\t\tupdateBalance();\n\t\t\t\tgoto(`?${$page.url.searchParams.toString()}`);\n\t\t\t} catch (e) {\n\t\t\t\tcontract = undefined;\n\n\t\t\t\tif (e.message) {\n\t\t\t\t\ttoast.push(e.message, { classes: ['warn'] });\n\t\t\t\t} else {\n\t\t\t\t\ttoast.push(e, { classes: ['warn'] });\n\t\t\t\t}\n\t\t\t}\n\t\t} else {\n\t\t\tcontract = undefined;\n\t\t\tbalance = undefined;\n\t\t}\n\t}\n\n\tconst updateBalance = async () => {\n\t\tif (contract) balance = await contract.getBalance();\n\t};\n\n\tfunction updateReceiptAddress() {\n\t\treceiptAddressStore.set(receiptAddressValue);\n\t}\n\n\treceiptAddressStore.subscribe((value) => {\n\t\treceiptAddress = value;\n\t\tif (receiptAddress && !contract) createContract();\n\t});\n\n\tfunction clearReceiptAddress() {\n\t\treceiptAddressValue = '';\n\t\treceiptAddress.set('');\n\t}\n</script>\n\n<svelte:head>\n\t<title>∑ ₿ᵪ</title>\n\t<meta name=\"description\" content=\"Unspent Cash\" />\n</svelte:head>\n\n<section>\n\t<table>\n\t\t<tr>\n\t\t\t{#if balance}\n\t\t\t\t<td />\n\t\t\t\t<td colspan=\"3\">\n\t\t\t\t\t<b>{balance.toLocaleString()}</b> sats\n\t\t\t\t</td>\n\t\t\t{:else}\n\t\t\t\t<td colspan=\"4\" />\n\t\t\t{/if}\n\t\t</tr>\n\t\t<tr>\n\t\t\t{#if contract}\n\t\t\t\t<td><img src={lock} alt=\"lock\" /></td>\n\t\t\t\t<td colspan=\"3\">\n\t\t\t\t\t<CopyToClipboard on:copy={() => toast.push('📋🗸')} text={contract.getAddress()} let:copy>\n\t\t\t\t\t\t<div class=\"action\">\n\t\t\t\t\t\t\t<button on:click={copy}>\n\t\t\t\t\t\t\t\t{contract.getAddress()}\n\t\t\t\t\t\t\t</button>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</CopyToClipboard>\n\t\t\t\t</td>\n\t\t\t{:else}\n\t\t\t\t<td><img src={lock} alt=\"lock\" /></td>\n\t\t\t\t<td colspan=\"4\">{$_('create')}</td>\n\t\t\t{/if}\n\t\t</tr>\n\t\t{#if receiptAddressValid}\n\t\t\t<tr>\n\t\t\t\t<td>\n\t\t\t\t\t<p>1 m</p>\n\t\t\t\t\t<img src={month} alt=\"month\" />\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>1/96</p>\n\n\t\t\t\t\t<img src={arrow_down} alt=\"to\" />\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>95/96</p>\n\t\t\t\t\t<img src={arrow_back} alt=\"back\" />\n\t\t\t\t</td>\n\t\t\t\t<td>\n\t\t\t\t\t<p>{new Intl.NumberFormat().format(1500)} sat</p>\n\t\t\t\t\t<img src={arrow_step} alt=\"step\" />\n\t\t\t\t</td>\n\t\t\t</tr>\n\t\t{/if}\n\t\t<tr>\n\t\t\t<td />\n\t\t\t<td style=\"line-break:auto;\" colspan=\"3\">{$_('receive')}:</td>\n\t\t</tr>\n\t\t<tr>\n\t\t\t<td />\n\t\t\t<td colspan=\"3\">\n\t\t\t\t<textarea id=\"addr\" on:change={() => createContract()} bind:value={receiptAddress} />\n\t\t\t</td>\n\t\t</tr>\n\t</table>\n</section>\n\n<style>\n\tsection {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex: 0.6;\n\t\tline-break: anywhere;\n\t}\n\n\t#form1 {\n\t\tdisplay: flex;\n\t\tflex-direction: column;\n\t\tjustify-content: center;\n\t\talign-items: center;\n\t\tflex: 0.6;\n\t}\n\n\ttable {\n\t\tborder: 4mm ridge rgba(211, 220, 50, 0.6);\n\t}\n\ttable tr td {\n\t\tmin-width: 20%;\n\t}\n\n\ttable tr td p {\n\t\tfont-size: small;\n\t}\n\n\th1 {\n\t\twidth: 100%;\n\t}\n\n\ttextarea {\n\t\twidth: 100%;\n\t\theight: 40px;\n\t}\n</style>\n"],"names":["goto","client_method","ssr","prerender","load","url","q","p","cashaddr","lockingBytecode","base58","lock","arrow_back","arrow_down","arrow_step","month","text","$$props","dispatch","createEventDispatcher","copy","e","insert_hydration","target","td","anchor","t1_value","ctx","td0","td1","append_hydration","b","dirty","set_data","t1","copytoclipboard_changes","t_value","div","button","is_function","t","t9_value","attr","img3","img3_src_value","tr","td2","td3","p3","t5_value","create_if_block_2","create_if_block","meta","section","table","tr0","tr1","tr2","tr3","textarea","current","t5","data","balance","receiptAddress","contract","receiptAddressValid","bytecode","inflate","base64ToBin","lockingBytecodeToCashAddress","createContract","sanitizeAddress","$$invalidate","receiptAddressStore","toast","Perpetuity","cashAddressToLockingBytecode","binToBase64","deflate","$page","updateBalance","value"],"mappings":"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","x_google_ignoreList":[0]}