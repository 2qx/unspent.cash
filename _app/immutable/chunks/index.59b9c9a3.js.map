{"version":3,"file":"index.59b9c9a3.js","sources":["../../../../../../../../node_modules/bip68/index.js"],"sourcesContent":["// see https://github.com/bitcoin/bips/blob/master/bip-0068.mediawiki#compatibility\n\nconst SEQUENCE_FINAL = 0xffffffff\nconst SEQUENCE_LOCKTIME_DISABLE_FLAG = (1 << 31)\nconst SEQUENCE_LOCKTIME_GRANULARITY = 9\nconst SEQUENCE_LOCKTIME_MASK = 0x0000ffff\nconst SEQUENCE_LOCKTIME_TYPE_FLAG = (1 << 22)\n\nconst BLOCKS_MAX = SEQUENCE_LOCKTIME_MASK\nconst SECONDS_MOD = 1 << SEQUENCE_LOCKTIME_GRANULARITY\nconst SECONDS_MAX = SEQUENCE_LOCKTIME_MASK << SEQUENCE_LOCKTIME_GRANULARITY\n\nfunction decode (sequence) {\n  if (sequence & SEQUENCE_LOCKTIME_DISABLE_FLAG) return {}\n  if (sequence & SEQUENCE_LOCKTIME_TYPE_FLAG) {\n    return {\n      seconds: (sequence & SEQUENCE_LOCKTIME_MASK) << SEQUENCE_LOCKTIME_GRANULARITY\n    }\n  }\n\n  return {\n    blocks: sequence & SEQUENCE_LOCKTIME_MASK\n  }\n}\n\nfunction encode ({ blocks, seconds }) {\n  if (blocks !== undefined && seconds !== undefined) throw new TypeError('Cannot encode blocks AND seconds')\n  if (blocks === undefined && seconds === undefined) return SEQUENCE_FINAL // neither? assume final\n\n  if (seconds !== undefined) {\n    if (!Number.isFinite(seconds)) throw new TypeError('Expected Number seconds')\n    if (seconds > SECONDS_MAX) throw new TypeError('Expected Number seconds <= ' + SECONDS_MAX)\n    if (seconds % SECONDS_MOD !== 0) throw new TypeError('Expected Number seconds as a multiple of ' + SECONDS_MOD)\n\n    return SEQUENCE_LOCKTIME_TYPE_FLAG | (seconds >> SEQUENCE_LOCKTIME_GRANULARITY)\n  }\n\n  if (!Number.isFinite(blocks)) throw new TypeError('Expected Number blocks')\n  if (blocks > SEQUENCE_LOCKTIME_MASK) throw new TypeError('Expected Number blocks <= ' + BLOCKS_MAX)\n\n  return blocks\n}\n\nmodule.exports = { decode, encode }\n"],"names":["SEQUENCE_FINAL","SEQUENCE_LOCKTIME_DISABLE_FLAG","SEQUENCE_LOCKTIME_GRANULARITY","SEQUENCE_LOCKTIME_MASK","SEQUENCE_LOCKTIME_TYPE_FLAG","BLOCKS_MAX","SECONDS_MOD","SECONDS_MAX","decode","sequence","encode","blocks","seconds","bip68"],"mappings":"yYAEA,MAAMA,EAAiB,WACjBC,EAAkC,GAAK,GACvCC,EAAgC,EAChCC,EAAyB,MACzBC,EAA+B,GAAK,GAEpCC,EAAaF,EACbG,EAAc,GAAKJ,EACnBK,EAAcJ,GAA0BD,EAE9C,SAASM,EAAQC,EAAU,CACzB,OAAIA,EAAWR,EAAuC,CAAE,EACpDQ,EAAWL,EACN,CACL,SAAUK,EAAWN,IAA2BD,CACjD,EAGI,CACL,OAAQO,EAAWN,CACpB,CACH,CAEA,SAASO,EAAQ,CAAE,OAAAC,EAAQ,QAAAC,GAAW,CACpC,GAAID,IAAW,QAAaC,IAAY,OAAW,MAAM,IAAI,UAAU,kCAAkC,EACzG,GAAID,IAAW,QAAaC,IAAY,OAAW,OAAOZ,EAE1D,GAAIY,IAAY,OAAW,CACzB,GAAI,CAAC,OAAO,SAASA,CAAO,EAAG,MAAM,IAAI,UAAU,yBAAyB,EAC5E,GAAIA,EAAUL,EAAa,MAAM,IAAI,UAAU,8BAAgCA,CAAW,EAC1F,GAAIK,EAAUN,IAAgB,EAAG,MAAM,IAAI,UAAU,4CAA8CA,CAAW,EAE9G,OAAOF,EAA+BQ,GAAWV,CAClD,CAED,GAAI,CAAC,OAAO,SAASS,CAAM,EAAG,MAAM,IAAI,UAAU,wBAAwB,EAC1E,GAAIA,EAASR,EAAwB,MAAM,IAAI,UAAU,6BAA+BE,CAAU,EAElG,OAAOM,CACT,CAEA,IAAAE,EAAiB,CAAE,OAAAL,EAAQ,OAAAE,CAAM","x_google_ignoreList":[0]}